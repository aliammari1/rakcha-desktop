name: JavaFX Application Tests

on:
  push:
    branches: [main, develop]
    paths:
      - "src/main/java/com/esprit/controllers/**"
      - "src/main/java/com/esprit/MainApp.java"
      - "src/main/resources/**"
      - "src/test/java/**"
  pull_request:
    branches: [main, develop]
    paths:
      - "src/main/java/com/esprit/controllers/**"
      - "src/main/java/com/esprit/MainApp.java"
      - "src/main/resources/**"
      - "src/test/java/**"
  workflow_dispatch:

env:
  JAVA_VERSION: "17"
  MAVEN_OPTS: "-Xmx1024m"

jobs:
  javafx-headless-tests:
    name: JavaFX Headless Tests on ${{ matrix.os }}
    runs-on: ${{ matrix.os }}
    strategy:
      matrix:
        os: [ubuntu-latest, windows-latest, macos-latest]

    steps:
      - name: Checkout code
        uses: actions/checkout@v4

      - name: Set up JDK ${{ env.JAVA_VERSION }}
        uses: actions/setup-java@v4
        with:
          java-version: ${{ env.JAVA_VERSION }}
          distribution: "temurin"

      - name: Cache Maven dependencies
        uses: actions/cache@v4
        with:
          path: ~/.m2
          key: ${{ runner.os }}-m2-${{ hashFiles('**/pom.xml') }}
          restore-keys: ${{ runner.os }}-m2

      - name: Set up virtual display (Linux)
        if: matrix.os == 'ubuntu-latest'
        run: |
          sudo apt-get update
          sudo apt-get install -y xvfb fontconfig
          export DISPLAY=:99
          Xvfb :99 -screen 0 1280x1024x24 -ac > /dev/null 2>&1 &
          sleep 3

      - name: Create data directory and set database
        run: |
          mkdir -p data
          echo "DB_TYPE=sqlite" >> $GITHUB_ENV
          echo "DB_URL=jdbc:sqlite:data/test_rakcha_db.sqlite" >> $GITHUB_ENV
          echo "DB_USER=" >> $GITHUB_ENV
          echo "DB_PASSWORD=" >> $GITHUB_ENV

      - name: Run JavaFX unit tests
        run: mvn test -Dtest="*ControllerTest,*ViewTest,*UITest" -DfailIfNoTests=false
        env:
          DISPLAY: ${{ matrix.os == 'ubuntu-latest' && ':99' || '' }}
          TESTFX_HEADLESS: true
          TESTFX_ROBOT: glass
          PRISM_ORDER: sw
          JAVA_OPTS: >-
            --add-opens javafx.graphics/com.sun.javafx.application=ALL-UNNAMED
            --add-exports javafx.graphics/com.sun.glass.ui=ALL-UNNAMED
            --add-opens javafx.controls/javafx.scene.control=ALL-UNNAMED
            --add-opens javafx.controls/javafx.scene.control.skin=ALL-UNNAMED
            --add-opens javafx.base/com.sun.javafx.event=ALL-UNNAMED
            --add-opens javafx.base/com.sun.javafx=ALL-UNNAMED
            --add-opens java.base/java.lang.reflect=ALL-UNNAMED

      - name: Upload JavaFX test results
        uses: actions/upload-artifact@v4
        if: always()
        with:
          name: javafx-test-results-${{ matrix.os }}
          path: |
            target/surefire-reports/
            target/screenshots/
          retention-days: 7

  javafx-integration-tests:
    name: JavaFX Integration Tests
    runs-on: ubuntu-latest

    steps:
      - name: Checkout code
        uses: actions/checkout@v4

      - name: Set up JDK ${{ env.JAVA_VERSION }}
        uses: actions/setup-java@v4
        with:
          java-version: ${{ env.JAVA_VERSION }}
          distribution: "temurin"

      - name: Cache Maven dependencies
        uses: actions/cache@v4
        with:
          path: ~/.m2
          key: ${{ runner.os }}-m2-${{ hashFiles('**/pom.xml') }}
          restore-keys: ${{ runner.os }}-m2

      - name: Set up virtual display
        run: |
          sudo apt-get update
          sudo apt-get install -y xvfb fontconfig
          export DISPLAY=:99
          Xvfb :99 -screen 0 1280x1024x24 -ac > /dev/null 2>&1 &
          sleep 3

      - name: Create data directory and set database
        run: |
          mkdir -p data
          echo "DB_TYPE=sqlite" >> $GITHUB_ENV
          echo "DB_URL=jdbc:sqlite:data/integration_test_rakcha_db.sqlite" >> $GITHUB_ENV
          echo "DB_USER=" >> $GITHUB_ENV
          echo "DB_PASSWORD=" >> $GITHUB_ENV

      - name: Run JavaFX integration tests
        run: mvn verify -DskipUnitTests=true
        env:
          DISPLAY: :99
          TESTFX_HEADLESS: true
          TESTFX_ROBOT: glass
          PRISM_ORDER: sw
          JAVA_OPTS: >-
            --add-opens javafx.graphics/com.sun.javafx.application=ALL-UNNAMED
            --add-exports javafx.graphics/com.sun.glass.ui=ALL-UNNAMED
            --add-opens javafx.controls/javafx.scene.control=ALL-UNNAMED
            --add-opens javafx.controls/javafx.scene.control.skin=ALL-UNNAMED
            --add-opens javafx.base/com.sun.javafx.event=ALL-UNNAMED
            --add-opens javafx.base/com.sun.javafx=ALL-UNNAMED
            --add-opens java.base/java.lang.reflect=ALL-UNNAMED

      - name: Upload integration test results
        uses: actions/upload-artifact@v4
        if: always()
        with:
          name: javafx-integration-test-results
          path: |
            target/failsafe-reports/
            target/screenshots/
            target/videos/
          retention-days: 7

  javafx-ui-tests:
    name: JavaFX UI Component Tests
    runs-on: ubuntu-latest

    steps:
      - name: Checkout code
        uses: actions/checkout@v4

      - name: Set up JDK ${{ env.JAVA_VERSION }}
        uses: actions/setup-java@v4
        with:
          java-version: ${{ env.JAVA_VERSION }}
          distribution: "temurin"

      - name: Cache Maven dependencies
        uses: actions/cache@v4
        with:
          path: ~/.m2
          key: ${{ runner.os }}-m2-${{ hashFiles('**/pom.xml') }}
          restore-keys: ${{ runner.os }}-m2

      - name: Set up virtual display
        run: |
          sudo apt-get update
          sudo apt-get install -y xvfb fontconfig
          export DISPLAY=:99
          Xvfb :99 -screen 0 1280x1024x24 -ac > /dev/null 2>&1 &
          sleep 3

      - name: Create data directory and set database
        run: |
          mkdir -p data
          echo "DB_TYPE=sqlite" >> $GITHUB_ENV
          echo "DB_URL=jdbc:sqlite:data/ui_test_rakcha_db.sqlite" >> $GITHUB_ENV
          echo "DB_USER=" >> $GITHUB_ENV
          echo "DB_PASSWORD=" >> $GITHUB_ENV

      - name: Compile application
        run: mvn compile

      - name: Test individual UI components
        run: |
          # Test if the main application can start
          timeout 30 mvn exec:java -Dexec.mainClass="com.esprit.MainApp" -Dexec.cleanupDaemonThreads=false || echo "Application startup test completed"
        env:
          DISPLAY: :99
          TESTFX_HEADLESS: true
          PRISM_ORDER: sw

      - name: Run UI validation tests
        run: |
          # Run specific UI tests if they exist
          mvn test -Dtest="*UIValidationTest,*ComponentTest,*LayoutTest" -DfailIfNoTests=false
        env:
          DISPLAY: :99
          TESTFX_HEADLESS: true
          TESTFX_ROBOT: glass
          PRISM_ORDER: sw

      - name: Upload UI test artifacts
        uses: actions/upload-artifact@v4
        if: always()
        with:
          name: javafx-ui-test-results
          path: |
            target/surefire-reports/
            target/screenshots/
          retention-days: 3

  javafx-performance-tests:
    name: JavaFX Performance Tests
    runs-on: ubuntu-latest

    steps:
      - name: Checkout code
        uses: actions/checkout@v4

      - name: Set up JDK ${{ env.JAVA_VERSION }}
        uses: actions/setup-java@v4
        with:
          java-version: ${{ env.JAVA_VERSION }}
          distribution: "temurin"

      - name: Cache Maven dependencies
        uses: actions/cache@v4
        with:
          path: ~/.m2
          key: ${{ runner.os }}-m2-${{ hashFiles('**/pom.xml') }}
          restore-keys: ${{ runner.os }}-m2

      - name: Set up virtual display
        run: |
          sudo apt-get update
          sudo apt-get install -y xvfb fontconfig
          export DISPLAY=:99
          Xvfb :99 -screen 0 1280x1024x24 -ac > /dev/null 2>&1 &
          sleep 3

      - name: Create data directory and set database
        run: |
          mkdir -p data
          echo "DB_TYPE=sqlite" >> $GITHUB_ENV
          echo "DB_URL=jdbc:sqlite:data/perf_test_rakcha_db.sqlite" >> $GITHUB_ENV
          echo "DB_USER=" >> $GITHUB_ENV
          echo "DB_PASSWORD=" >> $GITHUB_ENV

      - name: Build application
        run: mvn package -DskipTests

      - name: Run performance tests
        run: |
          # Memory usage test
          echo "Testing application memory usage..."
          java -Xmx512m -jar target/*.jar --test-mode --no-gui &
          APP_PID=$!
          sleep 10

          # Check if application is still running (didn't crash due to memory issues)
          if kill -0 $APP_PID 2>/dev/null; then
            echo "Application running successfully with 512MB memory limit"
            kill $APP_PID
          else
            echo "Application failed to run with memory constraints"
            exit 1
          fi
        env:
          DISPLAY: :99
          TESTFX_HEADLESS: true

      - name: Generate performance report
        run: |
          mkdir -p target/performance-reports
          echo "JavaFX Application Performance Test Results" > target/performance-reports/performance-summary.txt
          echo "Date: $(date)" >> target/performance-reports/performance-summary.txt
          echo "Java Version: $(java -version 2>&1 | head -n 1)" >> target/performance-reports/performance-summary.txt
          echo "Memory Test: PASSED - Application runs with 512MB limit" >> target/performance-reports/performance-summary.txt

      - name: Upload performance test results
        uses: actions/upload-artifact@v4
        if: always()
        with:
          name: javafx-performance-test-results
          path: target/performance-reports/
          retention-days: 7
