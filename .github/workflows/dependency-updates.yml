name: Dependency Updates

on:
  schedule:
    - cron: "0 2 * * 1" # Weekly on Monday at 2 AM
  workflow_dispatch:

env:
  JAVA_VERSION: "17"

jobs:
  update-dependencies:
    name: Update Dependencies
    runs-on: ubuntu-latest

    steps:
      - name: Checkout code
        uses: actions/checkout@v4
        with:
          token: ${{ secrets.GITHUB_TOKEN }}

      - name: Set up JDK ${{ env.JAVA_VERSION }}
        uses: actions/setup-java@v4
        with:
          java-version: ${{ env.JAVA_VERSION }}
          distribution: "temurin"

      - name: Cache Maven dependencies
        uses: actions/cache@v4
        with:
          path: ~/.m2
          key: ${{ runner.os }}-m2-${{ hashFiles('**/pom.xml') }}
          restore-keys: ${{ runner.os }}-m2

      - name: Check for dependency updates
        run: |
          echo "# Dependency Update Report" > dependency-updates.md
          echo "" >> dependency-updates.md
          echo "Generated on: $(date)" >> dependency-updates.md
          echo "" >> dependency-updates.md

          # Check for plugin updates
          echo "## Plugin Updates" >> dependency-updates.md
          mvn versions:display-plugin-updates | tee plugin-updates.txt
          if grep -q "The following plugin updates are available" plugin-updates.txt; then
            echo "" >> dependency-updates.md
            echo "\`\`\`" >> dependency-updates.md
            grep -A 50 "The following plugin updates are available" plugin-updates.txt | head -20 >> dependency-updates.md
            echo "\`\`\`" >> dependency-updates.md
          else
            echo "No plugin updates available." >> dependency-updates.md
          fi

          # Check for dependency updates
          echo "" >> dependency-updates.md
          echo "## Dependency Updates" >> dependency-updates.md
          mvn versions:display-dependency-updates | tee dependency-updates.txt
          if grep -q "The following dependencies" dependency-updates.txt; then
            echo "" >> dependency-updates.md
            echo "\`\`\`" >> dependency-updates.md
            grep -A 50 "The following dependencies" dependency-updates.txt | head -20 >> dependency-updates.md
            echo "\`\`\`" >> dependency-updates.md
          else
            echo "No dependency updates available." >> dependency-updates.md
          fi

      - name: Update patch versions (safe updates)
        run: |
          # Update to latest patch versions (considered safe)
          mvn versions:use-latest-versions -DallowMajorUpdates=false -DallowMinorUpdates=false

          # Check if any changes were made
          if ! git diff --quiet pom.xml; then
            echo "PATCH_UPDATES=true" >> $GITHUB_ENV
          else
            echo "PATCH_UPDATES=false" >> $GITHUB_ENV
          fi

      - name: Run tests with updated dependencies
        if: env.PATCH_UPDATES == 'true'
        run: |
          # Create test database
          mkdir -p data
          export DB_TYPE=sqlite
          export DB_URL=jdbc:sqlite:data/test_updates_rakcha_db.sqlite
          export DB_USER=""
          export DB_PASSWORD=""

          # Run tests to ensure updates don't break anything
          mvn clean test -DfailIfNoTests=false
        env:
          TESTFX_HEADLESS: true

      - name: Create Pull Request for patch updates
        if: env.PATCH_UPDATES == 'true'
        uses: peter-evans/create-pull-request@v5
        with:
          token: ${{ secrets.GITHUB_TOKEN }}
          commit-message: "chore: update dependencies to latest patch versions"
          title: "Automated Dependency Updates (Patch Versions)"
          body: |
            ## Automated Dependency Updates

            This PR contains automated updates to patch versions of dependencies.
            These are considered safe updates that should not introduce breaking changes.

            ### Changes
            - Updated dependencies to latest patch versions
            - All tests pass with updated dependencies

            ### Safety
            - Only patch version updates (x.y.Z) are included
            - All existing tests continue to pass
            - No breaking changes expected

            ### Generated Report
            See the dependency update report for details on available updates.

            **Auto-merge is recommended** if all checks pass.
          branch: automated-dependency-updates-patch
          delete-branch: true
          labels: |
            dependencies
            automated
            patch

      - name: Upload dependency update report
        uses: actions/upload-artifact@v4
        with:
          name: dependency-update-report
          path: |
            dependency-updates.md
            plugin-updates.txt
            dependency-updates.txt
          retention-days: 7

  security-updates:
    name: Security Updates
    runs-on: ubuntu-latest

    steps:
      - name: Checkout code
        uses: actions/checkout@v4
        with:
          token: ${{ secrets.GITHUB_TOKEN }}

      - name: Set up JDK ${{ env.JAVA_VERSION }}
        uses: actions/setup-java@v4
        with:
          java-version: ${{ env.JAVA_VERSION }}
          distribution: "temurin"

      - name: Cache Maven dependencies
        uses: actions/cache@v4
        with:
          path: ~/.m2
          key: ${{ runner.os }}-m2-${{ hashFiles('**/pom.xml') }}
          restore-keys: ${{ runner.os }}-m2

      - name: Check for security vulnerabilities
        run: |
          # Run OWASP dependency check
          mvn org.owasp:dependency-check-maven:check -DfailBuildOnAnyVulnerability=false

          # Extract high/critical vulnerabilities
          if [ -f "target/dependency-check-report.xml" ]; then
            # Check for high/critical severity vulnerabilities
            if grep -q 'severity="HIGH\|severity="CRITICAL"' target/dependency-check-report.xml; then
              echo "SECURITY_ISSUES=true" >> $GITHUB_ENV
              echo "High or critical security vulnerabilities found!"
              
              # Create security report
              echo "# Security Vulnerability Report" > security-report.md
              echo "" >> security-report.md
              echo "**⚠️ High or Critical vulnerabilities detected!**" >> security-report.md
              echo "" >> security-report.md
              echo "Please review the OWASP dependency check report for details." >> security-report.md
            else
              echo "SECURITY_ISSUES=false" >> $GITHUB_ENV
              echo "No high/critical security vulnerabilities found."
            fi
          fi

      - name: Create Security Issue
        if: env.SECURITY_ISSUES == 'true'
        uses: actions/github-script@v7
        with:
          script: |
            const fs = require('fs');

            let body = '## 🔒 Security Vulnerabilities Detected\n\n';
            body += 'The automated security scan has detected high or critical vulnerabilities in project dependencies.\n\n';
            body += '### Action Required\n';
            body += '1. Review the [OWASP Dependency Check Report](../actions/runs/${{ github.run_id }})\n';
            body += '2. Update affected dependencies\n';
            body += '3. Test the application thoroughly\n';
            body += '4. Close this issue once resolved\n\n';
            body += '### Priority\n';
            body += '🔴 **HIGH** - Security vulnerabilities should be addressed promptly\n\n';
            body += '---\n';
            body += '*This issue was created automatically by the security scanning workflow.*';

            // Check if a similar issue already exists
            const { data: issues } = await github.rest.issues.listForRepo({
              owner: context.repo.owner,
              repo: context.repo.repo,
              state: 'open',
              labels: 'security,vulnerability'
            });

            if (issues.length === 0) {
              await github.rest.issues.create({
                owner: context.repo.owner,
                repo: context.repo.repo,
                title: '🔒 Security Vulnerabilities Detected - Action Required',
                body: body,
                labels: ['security', 'vulnerability', 'high-priority']
              });
            }

      - name: Upload security reports
        if: always()
        uses: actions/upload-artifact@v4
        with:
          name: security-scan-results
          path: |
            target/dependency-check-report.*
            security-report.md
          retention-days: 30

  dependabot-auto-merge:
    name: Auto-merge Dependabot PRs
    runs-on: ubuntu-latest
    if: github.actor == 'dependabot[bot]'

    steps:
      - name: Dependabot metadata
        id: metadata
        uses: dependabot/fetch-metadata@v1
        with:
          github-token: "${{ secrets.GITHUB_TOKEN }}"

      - name: Auto-merge patch updates
        if: steps.metadata.outputs.update-type == 'version-update:semver-patch'
        run: |
          gh pr merge --auto --merge "$PR_URL"
        env:
          PR_URL: ${{github.event.pull_request.html_url}}
          GITHUB_TOKEN: ${{secrets.GITHUB_TOKEN}}

      - name: Auto-approve minor updates
        if: steps.metadata.outputs.update-type == 'version-update:semver-minor'
        run: |
          gh pr review --approve "$PR_URL"
        env:
          PR_URL: ${{github.event.pull_request.html_url}}
          GITHUB_TOKEN: ${{secrets.GITHUB_TOKEN}}
