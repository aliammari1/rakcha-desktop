name: Conveyor Release Build

on:
  # Trigger on manual workflow dispatch
  workflow_dispatch:
    inputs:
      version:
        description: 'Release version (leave empty to use project version)'
        required: false
        type: string
  
  # Trigger on push to main branch with version tags
  push:
    tags: ['v*']
    branches: [ main ]
    paths-ignore:
      - '**.md'
      - 'docs/**'

jobs:
  build-and-release:
    runs-on: ubuntu-latest
    
    steps:
    - name: Checkout repository
      uses: actions/checkout@v4
      with:
        fetch-depth: 0

    - name: Set up JDK 21
      uses: actions/setup-java@v4
      with:
        java-version: '21'
        distribution: 'temurin'

    - name: Cache Maven dependencies
      uses: actions/cache@v4
      with:
        path: ~/.m2
        key: ${{ runner.os }}-m2-${{ hashFiles('**/pom.xml') }}
        restore-keys: ${{ runner.os }}-m2

    - name: Build with Maven
      run: |
        chmod +x mvnw
        ./mvnw clean package -DskipTests

    - name: Verify build artifacts
      run: |
        echo "Checking build artifacts..."
        ls -la target/dependency/
        echo "JAR files found:"
        find target/dependency -name "*.jar" | head -10

    - name: Download and setup Conveyor
      run: |
        # Download Conveyor
        wget -q https://downloads.hydraulic.dev/conveyor/conveyor-18.1-linux-amd64.tar.gz
        tar -xzf conveyor-18.1-linux-amd64.tar.gz
        sudo mv conveyor-18.1-linux-amd64/bin/conveyor /usr/local/bin/
        conveyor --version

    - name: Setup signing key
      run: |
        if [ -z "${SIGNING_KEY:-}" ]; then
          echo "Generating temporary signing key for development..."
          TEMP_KEY=$(conveyor keys generate)
          echo "SIGNING_KEY=$TEMP_KEY" >> $GITHUB_ENV
          echo "‚ö†Ô∏è Using temporary signing key. For production, set SIGNING_KEY secret."
        else
          echo "Using provided signing key from secrets"
        fi
      env:
        SIGNING_KEY: ${{ secrets.CONVEYOR_SIGNING_KEY }}

    - name: Build packages with Conveyor
      run: |
        # Use CI configuration
        conveyor -f ci.conveyor.conf make site
      env:
        GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
        SIGNING_KEY: ${{ secrets.CONVEYOR_SIGNING_KEY }}

    - name: List generated packages
      run: |
        echo "Generated packages:"
        find output -type f -name "*" | sort

    - name: Upload build artifacts
      uses: actions/upload-artifact@v4
      with:
        name: conveyor-packages
        path: output/
        retention-days: 30

    - name: Create Release
      if: github.event_name == 'workflow_dispatch' || startsWith(github.ref, 'refs/tags/')
      uses: softprops/action-gh-release@v1
      with:
        tag_name: ${{ github.event.inputs.version || github.ref_name || 'v1.0.6' }}
        name: Release ${{ github.event.inputs.version || github.ref_name || 'v1.0.6' }}
        body: |
          ## RAKCHA Desktop Application Release
          
          This release includes packages for:
          - Windows (MSI installer)
          - macOS (DMG)  
          - Linux (DEB/RPM packages)
          
          ### Installation
          
          **Windows**: Download and run the `.msi` file
          **macOS**: Download and mount the `.dmg` file, then drag to Applications
          **Linux**: Download the appropriate `.deb` or `.rpm` file for your distribution
          
          ### What's New
          - Cross-platform packaging with Conveyor
          - Automatic updates
          - Native installers for all platforms
          
          Built from commit: ${{ github.sha }}
        files: |
          output/**/*
        draft: false
        prerelease: false
      env:
        GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}

    - name: Comment on success
      if: success()
      run: |
        echo "‚úÖ Build and release completed successfully!"
        echo "üì¶ Packages are available in the release or as artifacts"
        echo "üîó Release URL: https://github.com/${{ github.repository }}/releases"
