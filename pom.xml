<?xml version="1.0" encoding="UTF-8"?>
<project xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
  xmlns="http://maven.apache.org/POM/4.0.0"
  xsi:schemaLocation="http://maven.apache.org/POM/4.0.0 http://maven.apache.org/xsd/maven-4.0.0.xsd">

  <modelVersion>4.0.0</modelVersion>
  <groupId>org.example</groupId>
  <artifactId>RAKCHA</artifactId>
  <version>1.0.5</version>
  <properties>
    <maven.compiler.source>17</maven.compiler.source>
    <maven.compiler.target>17</maven.compiler.target>
    <maven.compiler.release>17</maven.compiler.release>
    <project.build.sourceEncoding>UTF-8</project.build.sourceEncoding>

    <junit.version>5.10.0</junit.version>
    <hibernate.version>7.0.2.Final</hibernate.version>
    <lombok.version>1.18.28</lombok.version>
    <slf4j.version>2.0.9</slf4j.version>
    <logback.version>1.4.12</logback.version>
    <h2.version>2.2.224</h2.version>
    <testfx.version>4.0.18</testfx.version>
  </properties>

  <repositories>
    <repository>
      <id>jitpack.io</id>
      <url>https://jitpack.io</url>
    </repository>
    <repository>
      <id>maven-central</id>
      <url>https://repo.maven.apache.org/maven2</url>
    </repository>
  </repositories>

  <dependencies>

    <!-- Hibernate ORM Dependencies -->
    <dependency>
      <groupId>org.hibernate.orm</groupId>
      <artifactId>hibernate-core</artifactId>
      <version>${hibernate.version}</version>
    </dependency>
    <dependency>
      <groupId>org.hibernate.orm</groupId>
      <artifactId>hibernate-hikaricp</artifactId>
      <version>${hibernate.version}</version>
    </dependency>
    <dependency>
      <groupId>org.hibernate.orm</groupId>
      <artifactId>hibernate-community-dialects</artifactId>
      <version>${hibernate.version}</version>
    </dependency>

    <!-- H2 Database for development -->
    <dependency>
      <groupId>com.h2database</groupId>
      <artifactId>h2</artifactId>
      <version>${h2.version}</version>
    </dependency>

    <!-- PostgreSQL for production -->
    <dependency>
      <groupId>org.postgresql</groupId>
      <artifactId>postgresql</artifactId>
      <version>42.6.1</version>
    </dependency>

    <!-- SQLite JDBC Driver -->
    <dependency>
      <groupId>org.xerial</groupId>
      <artifactId>sqlite-jdbc</artifactId>
      <version>3.45.2.0</version>
    </dependency>

    <!-- XML Processing Dependencies -->
    <!-- JAXB and Activation APIs - Jakarta version -->
    <dependency>
      <groupId>jakarta.xml.bind</groupId>
      <artifactId>jakarta.xml.bind-api</artifactId>
      <version>3.0.1</version>
    </dependency>
    <dependency>
      <groupId>org.glassfish.jaxb</groupId>
      <artifactId>jaxb-runtime</artifactId>
      <version>3.0.2</version>
    </dependency>
    <dependency>
      <groupId>jakarta.activation</groupId>
      <artifactId>jakarta.activation-api</artifactId>
      <version>2.1.0</version>
    </dependency>
    <dependency>
      <groupId>org.eclipse.angus</groupId>
      <artifactId>angus-activation</artifactId>
      <version>1.0.0</version>
    </dependency>

    <!-- StAX API and implementations -->
    <dependency>
      <groupId>javax.xml.stream</groupId>
      <artifactId>stax-api</artifactId>
      <version>1.0-2</version>
    </dependency>
    <dependency>
      <groupId>org.codehaus.woodstox</groupId>
      <artifactId>stax2-api</artifactId>
      <version>4.2.1</version>
    </dependency>
    <dependency>
      <groupId>com.fasterxml.woodstox</groupId>
      <artifactId>woodstox-core</artifactId>
      <version>6.4.0</version>
    </dependency>

    <!-- Additional XML support -->
    <dependency>
      <groupId>com.sun.xml.bind</groupId>
      <artifactId>jaxb-impl</artifactId>
      <version>3.0.2</version>
    </dependency>

    <!-- Jackson XML support for compatibility -->
    <dependency>
      <groupId>com.fasterxml.jackson.dataformat</groupId>
      <artifactId>jackson-dataformat-xml</artifactId>
      <version>2.15.2</version>
    </dependency>

    <!-- Logging Dependencies -->
    <dependency>
      <groupId>org.slf4j</groupId>
      <artifactId>slf4j-api</artifactId>
      <version>${slf4j.version}</version>
    </dependency>
    <dependency>
      <groupId>ch.qos.logback</groupId>
      <artifactId>logback-classic</artifactId>
      <version>${logback.version}</version>
    </dependency>

    <!-- Testing Dependencies -->
    <dependency>
      <groupId>org.junit.jupiter</groupId>
      <artifactId>junit-jupiter</artifactId>
      <version>${junit.version}</version>
      <scope>test</scope>
    </dependency>
    <dependency>
      <groupId>org.testfx</groupId>
      <artifactId>testfx-core</artifactId>
      <version>${testfx.version}</version>
      <scope>test</scope>
    </dependency>
    <dependency>
      <groupId>org.testfx</groupId>
      <artifactId>testfx-junit5</artifactId>
      <version>${testfx.version}</version>
      <scope>test</scope>
    </dependency>


    <!-- Screenshot and Video Generation Dependencies -->
    <dependency>
      <groupId>org.bytedeco</groupId>
      <artifactId>javacv-platform</artifactId>
      <version>1.5.10</version>
    </dependency>
    <dependency>
      <groupId>org.bytedeco</groupId>
      <artifactId>ffmpeg-platform-gpl</artifactId>
      <version>6.1.1-1.5.10</version>
    </dependency>

    <!-- Modern UI Packages -->
    <!-- MaterialFX for modern UI components -->
    <dependency>
      <groupId>io.github.palexdev</groupId>
      <artifactId>materialfx</artifactId>
      <version>11.15.0</version>
    </dependency>

    <!-- JFoenix for Material Design components -->
    <dependency>
      <groupId>com.jfoenix</groupId>
      <artifactId>jfoenix</artifactId>
      <version>9.0.10</version>
    </dependency>


    <!-- FontAwesome Icons -->
    <dependency>
      <groupId>de.jensd</groupId>
      <artifactId>fontawesomefx-materialicons</artifactId>
      <version>2.2.0-9.1.2</version>
    </dependency>

    <!-- Ikonli for additional icons -->
    <dependency>
      <groupId>org.kordamp.ikonli</groupId>
      <artifactId>ikonli-material-pack</artifactId>
      <version>12.3.1</version>
    </dependency>

    <!-- Existing Dependencies -->
    <dependency>
      <groupId>com.github.PlusHaze</groupId>
      <artifactId>TrayNotification</artifactId>
      <version>a8bfa597eb</version>
    </dependency>
    <dependency>
      <groupId>com.mysql</groupId>
      <artifactId>mysql-connector-j</artifactId>
      <version>9.0.0</version>
    </dependency>
    <dependency>
      <groupId>org.openjfx</groupId>
      <artifactId>javafx-controls</artifactId>
      <version>21.0.2</version>
    </dependency>
    <dependency>
      <groupId>org.openjfx</groupId>
      <artifactId>javafx-fxml</artifactId>
      <version>21.0.2</version>
    </dependency>
    <dependency>
      <groupId>de.jensd</groupId>
      <artifactId>fontawesomefx-fontawesome</artifactId>
      <version>4.7.0-9.1.2</version>
    </dependency>
    <dependency>
      <groupId>org.controlsfx</groupId>
      <artifactId>controlsfx</artifactId>
      <version>11.2.1</version>
    </dependency>
    <dependency>
      <groupId>org.openjfx</groupId>
      <artifactId>javafx-base</artifactId>
      <version>21.0.2</version>
    </dependency>
    <dependency>
      <groupId>com.google.http-client</groupId>
      <artifactId>google-http-client-jackson2</artifactId>
      <version>1.44.2</version>
    </dependency>
    <dependency>
      <groupId>com.google.apis</groupId>
      <artifactId>google-api-services-youtube</artifactId>
      <version>v3-rev20240514-2.0.0</version>
    </dependency>
    <dependency>
      <groupId>com.google.api-client</groupId>
      <artifactId>google-api-client</artifactId>
      <version>2.6.0</version>
    </dependency>
    <dependency>
      <groupId>javax.mail</groupId>
      <artifactId>mail</artifactId>
      <version>1.5.0-b01</version>
    </dependency>
    <dependency>
      <groupId>net.synedra</groupId>
      <artifactId>validatorfx</artifactId>
      <version>0.5.1</version>
    </dependency>
    <dependency>
      <groupId>com.stripe</groupId>
      <artifactId>stripe-java</artifactId>
      <version>29.2.0</version>
    </dependency>
    <dependency>
      <groupId>com.sun.mail</groupId>
      <artifactId>javax.mail</artifactId>
      <version>1.6.2</version>
    </dependency>
    <dependency>
      <groupId>org.apache.commons</groupId>
      <artifactId>commons-email</artifactId>
      <version>1.6.0</version>
    </dependency>
    <dependency>
      <groupId>commons-io</groupId>
      <artifactId>commons-io</artifactId>
      <version>2.16.1</version>
    </dependency>
    <dependency>
      <groupId>commons-codec</groupId>
      <artifactId>commons-codec</artifactId>
      <version>1.17.1</version>
    </dependency>
    <dependency>
      <groupId>com.vonage</groupId>
      <artifactId>server-sdk</artifactId>
      <version>8.1.0</version>
    </dependency>
    <dependency>
      <groupId>org.json</groupId>
      <artifactId>json</artifactId>
      <version>20240303</version>
    </dependency>
    <dependency>
      <groupId>com.github.scribejava</groupId>
      <artifactId>scribejava-apis</artifactId>
      <version>8.3.3</version>
    </dependency>
    <dependency>
      <groupId>com.github.scribejava</groupId>
      <artifactId>scribejava-httpclient-okhttp</artifactId>
      <version>8.3.3</version>
    </dependency>
    <dependency>
      <groupId>com.github.scribejava</groupId>
      <artifactId>scribejava-httpclient-ahc</artifactId>
      <version>8.3.3</version>
    </dependency>
    <dependency>
      <groupId>org.asynchttpclient</groupId>
      <artifactId>async-http-client</artifactId>
      <version>3.0.1</version>
    </dependency>
    <dependency>
      <groupId>org.apache.pdfbox</groupId>
      <artifactId>pdfbox</artifactId>
      <version>3.0.2</version>
    </dependency>
    <dependency>
      <groupId>com.google.zxing</groupId>
      <artifactId>core</artifactId>
      <version>3.5.3</version>
    </dependency>
    <dependency>
      <groupId>com.google.zxing</groupId>
      <artifactId>javase</artifactId>
      <version>3.5.3</version>
    </dependency>
    <dependency>
      <groupId>com.twilio.sdk</groupId>
      <artifactId>twilio</artifactId>
      <version>10.4.1</version>
    </dependency>
    <dependency>
      <groupId>com.itextpdf</groupId>
      <artifactId>itextpdf</artifactId>
      <version>5.5.13.4</version>
    </dependency>
    <dependency>
      <groupId>org.openjfx</groupId>
      <artifactId>javafx-web</artifactId>
      <version>21.0.2</version>
    </dependency>
    <dependency>
      <groupId>org.openjfx</groupId>
      <artifactId>javafx-swing</artifactId>
      <version>21.0.2</version>
    </dependency>
    <dependency>
      <groupId>org.openjfx</groupId>
      <artifactId>javafx-media</artifactId>
      <version>21.0.2</version>
    </dependency>
    <dependency>
      <groupId>org.kordamp.ikonli</groupId>
      <artifactId>ikonli-javafx</artifactId>
      <version>12.3.1</version>
    </dependency>
    <dependency>
      <groupId>org.kordamp.ikonli</groupId>
      <artifactId>ikonli-core</artifactId>
      <version>12.3.1</version>
    </dependency>
    <dependency>
      <groupId>org.kordamp.ikonli</groupId>
      <artifactId>ikonli-fontawesome5-pack</artifactId>
      <version>12.3.1</version>
    </dependency>
    <dependency>
      <groupId>org.kordamp.ikonli</groupId>
      <artifactId>ikonli-fontawesome-pack</artifactId>
      <version>12.3.1</version>
    </dependency>
    <dependency>
      <groupId>com.paypal.sdk</groupId>
      <artifactId>rest-api-sdk</artifactId>
      <version>1.14.0</version>
    </dependency>
    <dependency>
      <groupId>eu.iamgio</groupId>
      <artifactId>animated</artifactId>
      <version>1.3.0</version>
    </dependency>
    <dependency>
      <groupId>edu.stanford.nlp</groupId>
      <artifactId>stanford-corenlp</artifactId>
      <version>4.5.7</version>
    </dependency>
    <dependency>
      <groupId>edu.stanford.nlp</groupId>
      <artifactId>stanford-corenlp</artifactId>
      <version>4.5.7</version>
      <classifier>models</classifier>
    </dependency>
    <dependency>
      <groupId>com.calendarfx</groupId>
      <artifactId>view</artifactId>
      <version>11.12.7</version>
    </dependency>
    <!--    <dependency>-->
    <!--      <groupId>org.bytedeco</groupId>-->
    <!--      <artifactId>opencv-platform-gpu</artifactId>-->
    <!--      <version>4.10.0-1.5.11</version>-->
    <!--    </dependency>-->
    <dependency>
      <groupId>org.mindrot</groupId>
      <artifactId>jbcrypt</artifactId>
      <version>0.4</version>
    </dependency>
    <dependency>
      <groupId>io.github.typhon0</groupId>
      <artifactId>AnimateFX</artifactId>
      <version>1.2.4</version>
    </dependency>
    <dependency>
      <groupId>org.yaml</groupId>
      <artifactId>snakeyaml</artifactId>
      <version>2.2</version>
    </dependency>
    <!-- Lombok for reducing boilerplate code -->
    <dependency>
      <groupId>org.projectlombok</groupId>
      <artifactId>lombok</artifactId>
      <version>${lombok.version}</version>
      <scope>provided</scope>
    </dependency>
  </dependencies>
  <build>
    <plugins>
      <!-- Maven Compiler Plugin -->
      <plugin>
        <groupId>org.apache.maven.plugins</groupId>
        <artifactId>maven-compiler-plugin</artifactId>
        <version>3.11.0</version>
        <configuration>
          <source>17</source>
          <target>17</target>
          <release>17</release>
          <annotationProcessorPaths>
            <path>
              <groupId>org.projectlombok</groupId>
              <artifactId>lombok</artifactId>
              <version>1.18.38</version>
            </path>
          </annotationProcessorPaths>
        </configuration>
      </plugin>      <!--
      Maven Dependency Plugin to copy dependencies -->
      <plugin>
        <groupId>org.apache.maven.plugins</groupId>
        <artifactId>maven-dependency-plugin</artifactId>
        <version>3.6.1</version>
        <executions>
          <execution>
            <id>copy-dependencies</id>
            <phase>prepare-package</phase>
            <goals>
              <goal>copy-dependencies</goal>
            </goals>
            <configuration>
              <outputDirectory>${project.build.directory}/lib</outputDirectory>
              <overWriteReleases>false</overWriteReleases>
              <overWriteSnapshots>false</overWriteSnapshots>
              <overWriteIfNewer>true</overWriteIfNewer>
            </configuration>
          </execution>
        </executions>
      </plugin>

      <!-- Maven JAR Plugin with proper manifest -->
      <plugin>
        <groupId>org.apache.maven.plugins</groupId>
        <artifactId>maven-jar-plugin</artifactId>
        <version>3.3.0</version>
        <configuration>
          <archive>
            <manifest>
              <addClasspath>true</addClasspath>
              <classpathPrefix>lib/</classpathPrefix>
              <mainClass>com.esprit.MainApp</mainClass>
              <classpathLayoutType>custom</classpathLayoutType>
              <customClasspathLayout>
                lib/$${artifact.groupId}.$${artifact.artifactId}.$${artifact.extension}</customClasspathLayout>
            </manifest>
            <manifestEntries>
              <Class-Path>.</Class-Path>
            </manifestEntries>
          </archive>
        </configuration>
      </plugin>

      <!-- JavaFX Maven Plugin -->
      <plugin>
        <groupId>org.openjfx</groupId>
        <artifactId>javafx-maven-plugin</artifactId>
        <version>0.0.8</version>
        <configuration>
          <mainClass>com.esprit.MainApp</mainClass>
          <commandlineArgs>-Dfile.encoding=UTF-8</commandlineArgs>
          <includePathExceptionsInClasspath>true</includePathExceptionsInClasspath>
          <options>
            <option>-Djavax.xml.stream.XMLInputFactory=com.ctc.wstx.stax.WstxInputFactory</option>
            <option>-Djavax.xml.stream.XMLOutputFactory=com.ctc.wstx.stax.WstxOutputFactory</option>
            <option>-Djavax.xml.stream.XMLEventFactory=com.ctc.wstx.stax.WstxEventFactory</option>
            <option>
              -Djakarta.xml.bind.JAXBContextFactory=org.glassfish.jaxb.runtime.v2.JAXBContextFactory</option>
            <option>-Djdk.module.illegalAccess=deny</option>
            <option>--add-opens</option>
            <option>java.base/java.lang=ALL-UNNAMED</option>
            <option>--add-opens</option>
            <option>java.base/java.nio=ALL-UNNAMED</option>
            <option>--add-opens</option>
            <option>java.base/java.util=ALL-UNNAMED</option>
            <option>--add-exports</option>
            <option>java.base/sun.nio.ch=ALL-UNNAMED</option>
            <option>--add-exports</option>
            <option>java.management/sun.management=ALL-UNNAMED</option>
            <option>--add-exports</option>
            <option>jdk.unsupported/sun.misc=ALL-UNNAMED</option>
            <option>--add-exports</option>
            <option>java.xml/com.sun.org.apache.xerces.internal.dom=ALL-UNNAMED</option>
            <option>--add-opens</option>
            <option>java.xml/com.sun.org.apache.xerces.internal.util=ALL-UNNAMED</option>
            <option>--add-opens</option>
            <option>java.xml/com.sun.org.apache.xerces.internal.parsers=ALL-UNNAMED</option>
            <option>--add-opens</option>
            <option>java.xml/com.sun.org.apache.xerces.internal.impl=ALL-UNNAMED</option>
            <option>--add-opens</option>
            <option>java.xml/com.sun.org.apache.xerces.internal.impl.dtd=ALL-UNNAMED</option>
            <option>--add-opens</option>
            <option>java.xml/com.sun.org.apache.xerces.internal.impl.xs=ALL-UNNAMED</option>
            <option>--add-opens</option>
            <option>java.xml/com.sun.org.apache.xml.internal.serialize=ALL-UNNAMED</option>
            <option>--add-opens</option>
            <option>java.base/java.io=ALL-UNNAMED</option>
            <option>--add-opens</option>
            <option>java.base/java.util.regex=ALL-UNNAMED</option>
          </options>
          <stripDebug>true</stripDebug>
          <compress>2</compress>
          <noHeaderFiles>true</noHeaderFiles>
          <noManPages>true</noManPages>
          <launcher>rakcha</launcher>
          <jlinkImageName>rakcha-app</jlinkImageName>
          <jlinkZipName>rakcha-app</jlinkZipName>
          <jlinkJmodsPath>target/jmods</jlinkJmodsPath>
          <jlinkModules>
            javafx.controls,javafx.fxml,javafx.web,javafx.swing,javafx.media,java.sql,java.xml,java.naming,java.desktop</jlinkModules>
        </configuration>
      </plugin>

      <!-- Maven Exec Plugin for running the application -->
      <plugin>
        <groupId>org.codehaus.mojo</groupId>
        <artifactId>exec-maven-plugin</artifactId>
        <version>3.1.1</version>
        <configuration>
          <mainClass>com.esprit.MainApp</mainClass>
          <classpathScope>runtime</classpathScope>
          <cleanupDaemonThreads>false</cleanupDaemonThreads>
          <systemProperties>
            <systemProperty>
              <key>javax.xml.stream.XMLInputFactory</key>
              <value>com.ctc.wstx.stax.WstxInputFactory</value>
            </systemProperty>
            <systemProperty>
              <key>javax.xml.stream.XMLOutputFactory</key>
              <value>com.ctc.wstx.stax.WstxOutputFactory</value>
            </systemProperty>
            <systemProperty>
              <key>javax.xml.stream.XMLEventFactory</key>
              <value>com.ctc.wstx.stax.WstxEventFactory</value>
            </systemProperty>
            <systemProperty>
              <key>jakarta.xml.bind.JAXBContextFactory</key>
              <value>org.glassfish.jaxb.runtime.v2.JAXBContextFactory</value>
            </systemProperty>
            <systemProperty>
              <key>hibernate.jakarta.xml.bind.JAXBContextFactory</key>
              <value>org.glassfish.jaxb.runtime.v2.JAXBContextFactory</value>
            </systemProperty>
          </systemProperties>
        </configuration>
      </plugin>

      <!-- Maven Shade Plugin for fat JAR -->
      <plugin>
        <groupId>org.apache.maven.plugins</groupId>
        <artifactId>maven-shade-plugin</artifactId>
        <version>3.6.0</version>
        <executions>
          <execution>
            <phase>package</phase>
            <goals>
              <goal>shade</goal>
            </goals>
            <configuration>
              <createDependencyReducedPom>false</createDependencyReducedPom>
              <transformers>
                <transformer
                  implementation="org.apache.maven.plugins.shade.resource.ManifestResourceTransformer">
                  <mainClass>com.esprit.MainApp</mainClass>
                </transformer>
              </transformers>
            </configuration>
          </execution>
        </executions>
      </plugin>

      <!-- Surefire Plugin for Testing -->
      <plugin>
        <groupId>org.apache.maven.plugins</groupId>
        <artifactId>maven-surefire-plugin</artifactId>
        <version>3.1.2</version>
        <configuration>
          <argLine>
            --add-opens javafx.graphics/com.sun.javafx.application=ALL-UNNAMED
            --add-exports javafx.graphics/com.sun.glass.ui=ALL-UNNAMED
          </argLine>
        </configuration>
      </plugin>

      <!-- OpenRewrite Plugin for Code Refactoring and Best Practices -->
      <plugin>
        <groupId>org.openrewrite.maven</groupId>
        <artifactId>rewrite-maven-plugin</artifactId>
        <version>5.36.0</version>
        <configuration>
          <exportDatatables>true</exportDatatables>
          <configLocation>rewrite.yml</configLocation>
          <activeRecipes>
            <recipe>org.openrewrite.recipes.JavaRecipeBestPractices</recipe>
            <recipe>org.openrewrite.java.migrate.UpgradeToJava17</recipe>
            <recipe>org.openrewrite.recipes.OpenRewriteBestPractices</recipe>
            <recipe>org.openrewrite.recommendations.CodeHealth</recipe>
            <recipe>org.openrewrite.recommendations.CodeStyle</recipe>
            <recipe>org.openrewrite.staticanalysis.MissingOverrideAnnotation</recipe>
            <recipe>org.openrewrite.staticanalysis.CodeCleanup</recipe>
            <recipe>org.openrewrite.staticanalysis.AddSerialVersionUidToSerializable</recipe>
            <recipe>org.openrewrite.staticanalysis.ExplicitInitialization</recipe>
            <recipe>org.openrewrite.staticanalysis.FinalizePrivateFields</recipe>
            <recipe>org.openrewrite.staticanalysis.MethodNameCasing</recipe>
            <recipe>org.openrewrite.staticanalysis.UnnecessaryParentheses</recipe>
            <recipe>org.openrewrite.staticanalysis.UseDiamondOperator</recipe>
            <recipe>com.esprit.recipes.AddJavadocComments</recipe>
          </activeRecipes>
        </configuration>
        <dependencies>
          <dependency>
            <groupId>org.openrewrite.recipe</groupId>
            <artifactId>rewrite-migrate-java</artifactId>
            <version>3.11.0</version>
          </dependency>
          <dependency>
            <groupId>org.openrewrite.recipe</groupId>
            <artifactId>rewrite-static-analysis</artifactId>
            <version>1.12.0</version>
          </dependency>
        </dependencies>
      </plugin>      <!--
      Javadoc Plugin for Documentation Generation -->
      <plugin>
        <groupId>org.apache.maven.plugins</groupId>
        <artifactId>maven-javadoc-plugin</artifactId>
        <version>3.6.3</version>
        <configuration>
          <source>17</source>
          <encoding>UTF-8</encoding>
          <docencoding>UTF-8</docencoding>
          <charset>UTF-8</charset>
          <show>private</show>
          <nohelp>true</nohelp>
          <failOnError>false</failOnError>
          <failOnWarnings>false</failOnWarnings>
          <quiet>true</quiet>
          <reportOutputDirectory>${project.basedir}</reportOutputDirectory>
          <destDir>docs</destDir>
          <additionalJOptions>
            <additionalJOption>-Xdoclint:none</additionalJOption>
          </additionalJOptions>
          <tags>
            <tag>
              <name>apiNote</name>
              <placement>a</placement>
              <head>API Note:</head>
            </tag>
            <tag>
              <name>implSpec</name>
              <placement>a</placement>
              <head>Implementation Requirements:</head>
            </tag>
            <tag>
              <name>implNote</name>
              <placement>a</placement>
              <head>Implementation Note:</head>
            </tag>
          </tags>
        </configuration>
        <executions>
          <execution>
            <id>attach-javadocs</id>
            <goals>
              <goal>jar</goal>
            </goals>
          </execution>
          <execution>
            <id>generate-docs</id>
            <phase>package</phase>
            <goals>
              <goal>javadoc</goal>
            </goals>
          </execution>
        </executions>
      </plugin>

      <!-- SpotBugs Plugin for Static Analysis -->
      <plugin>
        <groupId>com.github.spotbugs</groupId>
        <artifactId>spotbugs-maven-plugin</artifactId>
        <version>4.8.2.0</version>
        <configuration>
          <effort>Max</effort>
          <threshold>Low</threshold>
          <failOnError>false</failOnError>
          <xmlOutput>true</xmlOutput>
          <spotbugsXmlOutputDirectory>${project.build.directory}/spotbugs</spotbugsXmlOutputDirectory>
        </configuration>
        <executions>
          <execution>
            <goals>
              <goal>check</goal>
            </goals>
          </execution>
        </executions>
      </plugin>

      <!-- Checkstyle Plugin for Code Style -->
      <plugin>
        <groupId>org.apache.maven.plugins</groupId>
        <artifactId>maven-checkstyle-plugin</artifactId>
        <version>3.3.1</version>
        <configuration>
          <configLocation>checkstyle.xml</configLocation>
          <consoleOutput>true</consoleOutput>
          <failsOnError>false</failsOnError>
          <linkXRef>false</linkXRef>
        </configuration>
        <executions>
          <execution>
            <id>validate</id>
            <phase>validate</phase>
            <goals>
              <goal>check</goal>
            </goals>
          </execution>
        </executions>
        <dependencies>
          <dependency>
            <groupId>com.puppycrawl.tools</groupId>
            <artifactId>checkstyle</artifactId>
            <version>10.12.7</version>
          </dependency>
        </dependencies>
      </plugin>

      <!-- PMD Plugin for Code Quality -->
      <plugin>
        <groupId>org.apache.maven.plugins</groupId>
        <artifactId>maven-pmd-plugin</artifactId>
        <version>3.21.2</version>
        <configuration>
          <rulesets>
            <ruleset>/category/java/bestpractices.xml</ruleset>
            <ruleset>/category/java/codestyle.xml</ruleset>
            <ruleset>/category/java/design.xml</ruleset>
            <ruleset>/category/java/errorprone.xml</ruleset>
            <ruleset>/category/java/performance.xml</ruleset>
            <ruleset>/category/java/security.xml</ruleset>
          </rulesets>
          <failOnViolation>false</failOnViolation>
          <printFailingErrors>true</printFailingErrors>
        </configuration>
        <executions>
          <execution>
            <goals>
              <goal>check</goal>
            </goals>
          </execution>
        </executions>
      </plugin>

      <!-- Failsafe Plugin for Integration Tests -->
      <plugin>
        <groupId>org.apache.maven.plugins</groupId>
        <artifactId>maven-failsafe-plugin</artifactId>
        <version>3.2.5</version>
        <configuration>
          <argLine>
            --add-opens javafx.graphics/com.sun.javafx.application=ALL-UNNAMED
            --add-exports javafx.graphics/com.sun.glass.ui=ALL-UNNAMED
            --add-opens javafx.controls/javafx.scene.control=ALL-UNNAMED
            --add-opens javafx.controls/javafx.scene.control.skin=ALL-UNNAMED
            --add-opens javafx.base/com.sun.javafx.event=ALL-UNNAMED
            --add-opens javafx.base/com.sun.javafx=ALL-UNNAMED
            --add-opens java.base/java.lang.reflect=ALL-UNNAMED
            -Djava.awt.headless=false
            -Dtestfx.robot=glass
            -Dtestfx.headless=false
            -Dprism.order=sw
          </argLine>
          <includes>
            <include>**/*IT.java</include>
            <include>**/*E2E.java</include>
            <include>**/*IntegrationTest.java</include>
          </includes>
        </configuration>
        <executions>
          <execution>
            <goals>
              <goal>integration-test</goal>
              <goal>verify</goal>
            </goals>
          </execution>
        </executions>
      </plugin>

      <!-- License Maven Plugin -->
      <plugin>
        <groupId>org.codehaus.mojo</groupId>
        <artifactId>license-maven-plugin</artifactId>
        <version>2.3.0</version>
        <configuration>
          <verbose>false</verbose>
          <addSvnKeyWords>true</addSvnKeyWords>
          <licenseName>mit</licenseName>
          <organizationName>RAKCHA</organizationName>
          <inceptionYear>2023</inceptionYear>
          <roots>
            <root>src/main/java</root>
            <root>src/test/java</root>
          </roots>
        </configuration>
        <executions>
          <execution>
            <id>first</id>
            <goals>
              <goal>update-file-header</goal>
            </goals>
            <phase>process-sources</phase>
          </execution>
        </executions>
      </plugin>

      <!-- Versions Maven Plugin for dependency updates -->
      <plugin>
        <groupId>org.codehaus.mojo</groupId>
        <artifactId>versions-maven-plugin</artifactId>
        <version>2.16.2</version>
        <configuration>
          <generateBackupPoms>false</generateBackupPoms>
        </configuration>
      </plugin>

      <!-- Maven Deploy Plugin -->
      <plugin>
        <groupId>org.apache.maven.plugins</groupId>
        <artifactId>maven-deploy-plugin</artifactId>
        <version>3.1.1</version>
      </plugin>

      <!-- Maven Site Plugin -->
      <plugin>
        <groupId>org.apache.maven.plugins</groupId>
        <artifactId>maven-site-plugin</artifactId>
        <version>4.0.0-M13</version>
      </plugin>

      <!-- Maven Project Info Reports Plugin -->
      <plugin>
        <groupId>org.apache.maven.plugins</groupId>
        <artifactId>maven-project-info-reports-plugin</artifactId>
        <version>3.4.5</version>
      </plugin>

      <!-- SonarQube Maven Plugin -->
      <plugin>
        <groupId>org.sonarsource.scanner.maven</groupId>
        <artifactId>sonar-maven-plugin</artifactId>
        <version>3.10.0.2594</version>
      </plugin>

      <!-- JaCoCo Plugin for code coverage -->
      <plugin>
        <groupId>org.jacoco</groupId>
        <artifactId>jacoco-maven-plugin</artifactId>
        <version>0.8.11</version>
        <executions>
          <execution>
            <id>prepare-agent</id>
            <goals>
              <goal>prepare-agent</goal>
            </goals>
          </execution>
          <execution>
            <id>report</id>
            <phase>prepare-package</phase>
            <goals>
              <goal>report</goal>
            </goals>
          </execution>
        </executions>
      </plugin>
    </plugins>
  </build>
</project>